Math.SQRT3=Math.sqrt(3),Math.SQRT5=Math.sqrt(5),Math.SQRT6=Math.sqrt(6),Math.SQRT10=Math.sqrt(10),Math.PHI=(1+Math.SQRT5)/2,Math.GOLDEN_RATIO=Math.PHI,Math.SILVER_RATIO=1+Math.SQRT2,Math.isInt=function(t){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t);return t%1==0},Math.randomBetween=function(t,e){if(!t)throw new Error("Trying to generate a random number without specifying the minimum range");if(!e)throw new Error("Trying to generate a random number without specifying the maximum range");return Math.floor(Math.random()*(e-t+1)+t)},Math.roundTo=function(t,e=1){if(null==t)throw new TypeError("Cannot perform Math rounding on undefined");if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t);return Math.round(t*10**e)/10**e},Math.square=function(t){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t);return Math.pow(t,2)},Math.cube=function(t){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t);return Math.pow(t,3)},Math.factorial=function(t){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t);if(!Math.isInt(t))throw new TypeError("Expected a positive integer, got a floating-point number");if(t<0)throw new TypeError("Expected positive integer, got negative integer");if(0==t)return 1;let e=1;for(let r=1;r<=t;r++)e*=r;return e},Math.fallingFactorial=function(t,e){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t+" as first argument");if(!Math.isInt(t))throw new TypeError("Expected a positive integer, got a floating-point number as first argument");if(t<0)throw new TypeError("Expected a positive integer, got negative integer as first argument");if("number"!=typeof e)throw new TypeError("Expected number, got "+typeof e+" as second argument");if(!Math.isInt(e))throw new TypeError("Expected a positive integer, got a floating-point number as second argument");if(e<0)throw new TypeError("Expected a positive integer, got negative integer as second argument");return e>t?0:Math.factorial(t)/Math.factorial(t-e)},Math.binomialCoefficient=function(t,e){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t+" as first argument");if(!Math.isInt(t))throw new TypeError("Expected a positive integer, got a floating-point number as first argument");if(t<0)throw new TypeError("Expected a positive integer, got negative integer as first argument");if("number"!=typeof e)throw new TypeError("Expected number, got "+typeof e+" as second argument");if(!Math.isInt(e))throw new TypeError("Expected a positive integer, got a floating-point number as second argument");if(e<0)throw new TypeError("Expected a positive integer, got negative integer as second argument");return e>t?0:Math.factorial(t)/Math.factorial(e)/Math.factorial(t-e)},Math.gcd=function(t,e){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t+" as first argument");if(!Math.isInt(t))throw new TypeError("Expected a positive integer, got a floating-point number as first argument");if("number"!=typeof e)throw new TypeError("Expected number, got "+typeof e+" as second argument");if(!Math.isInt(e))throw new TypeError("Expected a positive integer, got a floating-point number as second argument");if(t==1/0||t==-1/0||e==1/0||e==-1/0)return 1/0;for(;0!=e;){let r=e;e=t%e,t=r}return t},Math.lcm=function(t,e){if("number"!=typeof t)throw new TypeError("Expected number, got "+typeof t+" as first argument");if(!Math.isInt(t))throw new TypeError("Expected a positive integer, got a floating-point number as first argument");if("number"!=typeof e)throw new TypeError("Expected number, got "+typeof e+" as second argument");if(!Math.isInt(e))throw new TypeError("Expected a positive integer, got a floating-point number as second argument");return t==1/0||t==-1/0||e==1/0||e==-1/0?0:Math.abs(t*e)/Math.gcd(t,e)},Math.average=function(t,...e){if(!(t=Array.isArray(t)?[...t,...e]:[t,...e]).length)return 0;let r=0;for(const e of t)r+=e;return r/t.length},Math.weightedAverage=function(t){if(!Array.isArray(t))throw new TypeError("Expected array, got "+typeof t);if(!t.length)return 0;let e=0,r=0;for(const[n,o]of t){if(!Array.isArray(n))throw new TypeError("Expected array, got "+typeof n+" on index "+o);if(Number.isNaN(n[0]))throw new TypeError("Expected number as first item in array, got "+typeof n[0]+" on index "+o);e+=n[0]*(n[1]??1),r+=n[1]??1}return e/r},Math.geometricMean=function(t,...e){if(!(t=Array.isArray(t)?[...t,...e]:[t,...e]).length)return 0;let r=1;for(const e of t)r*=e;return Math.sqrt(r)},Math.mean=function(t,...e){if(!(t=Array.isArray(t)?[...t,...e]:[t,...e]).length)return 0;t=t.sort();let r=Math.round(t.length/2);return t.length%2?t[r-1]:Math.average(t[r],t[r-1])},Math.variance=function(t,...e){if(!(t=Array.isArray(t)?[...t,...e]:[t,...e]).length)return 0;let r=Math.average(t),n=0;for(const e of t)n+=(e-r)**2;return n/t.length},Math.standardDeviation=function(t,...e){return(t=Array.isArray(t)?[...t,...e]:[t,...e]).length?Math.sqrt(Math.variance(t)):0};